{"version":3,"file":"component---src-pages-archive-js-3d6c9568673d1bd108d4.js","mappings":"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","sources":["webpack://harshjangid.github.io/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport sr from \"@utils/sr\";\nimport config from \"@config\";\nimport { Layout } from \"@components\";\nimport { FormattedIcon } from \"@components/icons\";\nimport styled from \"styled-components\";\nimport { theme, mixins, media, Main } from \"@styles\";\nconst { colors, fonts, fontSizes } = theme;\nconst { srConfig } = config;\n\nconst StyledMainContainer = styled(Main)``;\nconst StyledTableContainer = styled.div`\n    margin: 100px -20px;\n    ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\nconst StyledTable = styled.table`\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n        ${media.tablet`\n      display: none;\n    `};\n    }\n\n    tbody tr {\n        transition: ${theme.transition};\n\n        &:hover,\n        &:focus {\n            background-color: ${colors.lightNavy};\n        }\n    }\n    th,\n    td {\n        cursor: default;\n        line-height: 1.5;\n        padding: 10px 20px;\n        ${media.tablet`\n      padding: 10px;\n    `};\n    }\n    th {\n        text-align: left;\n    }\n    td {\n        &.year {\n            width: 10%;\n            ${media.tablet`\n        font-size: ${fontSizes.sm};\n      `};\n        }\n        &.title {\n            padding-top: 15px;\n            color: ${colors.lightestSlate};\n            font-size: ${fontSizes.xl};\n            font-weight: 700;\n        }\n        &.company {\n            width: 15%;\n            padding-top: 15px;\n            font-size: ${fontSizes.lg};\n        }\n        &.tech {\n            font-size: ${fontSizes.xs};\n            font-family: ${fonts.SFMono};\n            .separator {\n                margin: 0 5px;\n            }\n            span {\n                display: inline-block;\n            }\n        }\n        &.links {\n            span {\n                display: flex;\n                align-items: center;\n                a {\n                    ${mixins.flexCenter};\n                }\n                a + a {\n                    margin-left: 10px;\n                }\n                svg {\n                    width: 20px;\n                    height: 20px;\n                }\n            }\n        }\n    }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n    const projects = data.allMarkdownRemark.edges;\n\n    const revealTitle = useRef(null);\n    const revealTable = useRef(null);\n    const revealProjects = useRef([]);\n    useEffect(() => {\n        sr.reveal(revealTitle.current, srConfig());\n        sr.reveal(revealTable.current, srConfig());\n        revealProjects.current.forEach((ref, i) =>\n            sr.reveal(ref, srConfig(i * 10)),\n        );\n    }, []);\n\n    return (\n        <Layout location={location}>\n            <Helmet>\n                <title>Archive | Harsh Jangid</title>\n                <link\n                    rel=\"canonical\"\n                    href=\"https://brittanychiang.com/archive\"\n                />\n            </Helmet>\n\n            <StyledMainContainer>\n                <header ref={revealTitle}>\n                    <h1 className=\"big-title\">Archive</h1>\n                    <p className=\"subtitle\">\n                        A big list of things I’ve worked on\n                    </p>\n                </header>\n\n                <StyledTableContainer ref={revealTable}>\n                    <StyledTable>\n                        <thead>\n                            <tr>\n                                <th>Year</th>\n                                <th>Title</th>\n                                <th className=\"hide-on-mobile\">Made at</th>\n                                <th className=\"hide-on-mobile\">Built with</th>\n                                <th>Link</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {projects.length > 0 &&\n                                projects.map(({ node }, i) => {\n                                    const {\n                                        date,\n                                        github,\n                                        external,\n                                        title,\n                                        tech,\n                                        company,\n                                    } = node.frontmatter;\n                                    return (\n                                        <tr\n                                            key={i}\n                                            ref={(el) =>\n                                                (revealProjects.current[i] = el)\n                                            }\n                                        >\n                                            <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                                            <td className=\"title\">{title}</td>\n\n                                            <td className=\"company hide-on-mobile\">\n                                                {company ? (\n                                                    <span>{company}</span>\n                                                ) : (\n                                                    <span>—</span>\n                                                )}\n                                            </td>\n\n                                            <td className=\"tech hide-on-mobile\">\n                                                {tech.length > 0 &&\n                                                    tech.map((item, i) => (\n                                                        <span key={i}>\n                                                            {item}\n                                                            {\"\"}\n                                                            {i !==\n                                                                tech.length -\n                                                                    1 && (\n                                                                <span className=\"separator\">\n                                                                    &middot;\n                                                                </span>\n                                                            )}\n                                                        </span>\n                                                    ))}\n                                            </td>\n\n                                            <td className=\"links\">\n                                                <span>\n                                                    {external && (\n                                                        <a\n                                                            href={external}\n                                                            target=\"_blank\"\n                                                            rel=\"nofollow noopener noreferrer\"\n                                                            aria-label=\"External Link\"\n                                                        >\n                                                            <FormattedIcon name=\"External\" />\n                                                        </a>\n                                                    )}\n                                                    {github && (\n                                                        <a\n                                                            href={github}\n                                                            target=\"_blank\"\n                                                            rel=\"nofollow noopener noreferrer\"\n                                                            aria-label=\"GitHub Link\"\n                                                        >\n                                                            <FormattedIcon name=\"GitHub\" />\n                                                        </a>\n                                                    )}\n                                                </span>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                        </tbody>\n                    </StyledTable>\n                </StyledTableContainer>\n            </StyledMainContainer>\n        </Layout>\n    );\n};\nArchivePage.propTypes = {\n    location: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n    {\n        allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        date\n                        title\n                        tech\n                        github\n                        external\n                        company\n                    }\n                    html\n                }\n            }\n        }\n    }\n`;\n"],"names":["colors","fonts","fontSizes","theme","srConfig","config","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","div","media","tablet","StyledTable","table","transition","lightNavy","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","_ref","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","forEach","ref","i","React","Layout","Helmet","rel","href","className","length","map","_ref2","node","date","github","external","title","tech","company","frontmatter","key","el","Date","getFullYear","item","target","FormattedIcon","name"],"sourceRoot":""}